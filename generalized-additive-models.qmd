# 广义可加模型 {#sec-generalized-additive-models}

```{r}
#| echo: false

source("_common.R")
```

相比于广义线性模型，广义可加模型可以看作是一种非线性模型，模型中含有非线性的成分。

::: callout-note
-   多元适应性（自适应）回归样条 multivariate adaptive regression splines
-   Friedman, Jerome H. 1991. Multivariate Adaptive Regression Splines. The Annals of Statistics. 19(1):1--67. <https://doi.org/10.1214/aos/1176347963>
-   earth: Multivariate Adaptive Regression Splines <http://www.milbo.users.sonic.net/earth>
-   Friedman, Jerome H. 2001. Greedy function approximation: A gradient boosting machine. The Annals of Statistics. 29(5):1189--1232. <https://doi.org/10.1214/aos/1013203451>
-   Friedman, Jerome H., Trevor Hastie and Robert Tibshirani. Additive Logistic Regression: A Statistical View of Boosting. The Annals of Statistics. 28(2): 337--374. <http://www.jstor.org/stable/2674028>
-   [Flexible Modeling of Alzheimer's Disease Progression with I-Splines](https://github.com/pourzanj/Stancon2018_Alzheimers) [PDF 文档](https://cse.cs.ucsb.edu/sites/default/files/publications/stancon_alzheimers.pdf)
-   [Implementation of B-Splines in Stan](https://github.com/milkha/Splines_in_Stan) [网页文档](https://mc-stan.org/users/documentation/case-studies/splines_in_stan.html)
:::

## 频率派

MASS 包的 mcycle 数据集

```{r}
#| label: fig-mcycle
#| fig-width: 5
#| fig-height: 4
#| fig-cap: mcycle 数据集
#| fig-showtext: true

data(mcycle, package = "MASS")
library(ggplot2)
ggplot(data = mcycle, aes(x = times, y = accel)) +
  geom_point() +
  theme_bw()
```

样条回归

```{r}
#| message: false

library(mgcv)
fgam <- gam(accel ~ s(times), data = mcycle, method = "REML")
summary(fgam)
```

方差成分

```{r}
gam.vcomp(fgam, rescale = FALSE)
```

```{r}
#| label: fig-mcycle-viz
#| fig-width: 5
#| fig-height: 4
#| fig-cap: mcycle 数据集
#| fig-showtext: true
#| par: true

plot(fgam)
```

## 贝叶斯派

```{r}
#| message: false

library(cmdstanr)
```

```{r}
#| eval: false

bgam <- brms::brm(accel ~ s(times),
  data = mcycle, family = gaussian(), cores = 2, seed = 20232023,
  iter = 4000, warmup = 1000, thin = 10, refresh = 0,
  control = list(adapt_delta = 0.99)
)
summary(bgam)
```

```{r}
#| eval: false
brms::fixef(bgam) # 固定效应
# brms::ranef(bgam) # 随机效应
```

```{r}
#| eval: false

ms_bgam <- brms::conditional_smooths(bgam) # 平滑效应
plot(ms_bgam)
```

```{r}
#| eval: false
brms::bayes_R2(bgam)
brms::waic(bgam)
# brms::log_lik(bgam)
brms::loo(bgam)
```

```{r}
#| eval: false
brms::pp_check(bgam, ndraws = 50)
```

```{r}
#| eval: false
brms::make_stancode(accel ~ s(times), data = mcycle, family = gaussian())
```
