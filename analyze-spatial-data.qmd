# 预测核辐射强度的分布 {#sec-nuclear-pollution-concentration}

```{r}
#| echo: false

source("_common.R")
```

本章内容属于空间分析的范畴，空间分析的内容十分广泛，本章仅以一个模型和一个数据简略介绍。一个模型是空间广义线性混合效应模型，空间广义线性混合效应模型在流行病学、生态学、环境学等领域有广泛的应用，如预测某地区内的疟疾流行度分布，预测某地区 PM 2.5 污染物浓度分布等。一个数据来自生态学领域，数据集所含样本量不大，但每个样本收集成本不小，采集样本前也都有实验设计，数据采集的地点是预先设定的。

2002 年张首次提出蒙特卡洛极大似然算法给出空间广义线性混合效应模型的估计与预测[@Zhang2002]，因混合模型的多样性，参数计算的复杂性，后续学者们分别从贝叶斯和频率方法的视角提出精确和近似的算法。近似算法的想法是找了一个近似函数替换其中的部分或者全部，使得随着迭代次数增加的情况下，估计的参数值可以趋于真值。精确算法的想法是通过模拟计算的方式硬积一个高维积分，不断增加采样的次数逼近目标函数，比如基于 MCMC 及其改进型 HMC 和 NUTS 硬积参数的联合后验分布中的高维积分做参数的全贝叶斯推断。贝叶斯方法主流的有拉普拉斯近似和全贝叶斯推断，频率方法主流的有基于似然的拉普拉斯近似和自适应高斯-埃尔米特算法。R 语言社区的 **spaMM** 包[@Rousset2014]，**INLA** 包[@Rue2009; @Lindgren2015]、**glmmfields** 包[@glmmfields2018]、**glmmTMB [@Brooks2017]、sdmTMB** 包[@Anderson2022] 和 **hglm 包**[@Ronnegard2010]都可以用来拟合模型。

-   **spaMM** 包采用拉普拉斯近似算法拟合空间广义线性混合效应模型，兼容 **lme4** 包的公式语法，提供统一的使用方式，还可以与 **INLA** 包集成。
-   **INLA** 包采用随机偏微分方程方法将目标区域划分成三角网格，以拉普拉斯集成嵌套计算方法逼近参数的后验分布[@Virgilio2018]。预测精度和速度主要由网格的细密程度决定，对于大规模空间数据集，比如数以千计的采样点，可以将网格划分得稀疏一些，总是可以计算。内部采用了并行迭代和英特尔 MKL 矩阵优化工具库。
-   **glmmfields** 包以多元 t 分布替代多元正态分布表示高斯马尔可夫随机场拟合带极端事件的时空模型，所以它不局限于本文涉及的空间模型。**glmmfields** 包内建的空间和时空模型是基于 Stan 的，因此，采用全贝叶斯精确推断方式，一般以 NUTS 采样的方式获取参数后验分布，主要算法是汉密尔顿蒙特卡洛 HMC， 对自动微分变分推断方式有试验性支持。
-   **sdmTMB** 包与 **glmmTMB** 包源自一脉，内部的计算框架都来自 TMB，相比而言，支持的模型更多，特别是生态学领域的空间和时空模型。
-   **hglm** 包对于具有分层结构的混合效应模型，提出 H-Likelihood 方法拟合分层广义线性模型、空间条件自回归模型 [@Alam2015]。

下面将对真实数据分析和建模，任务是预测核辐射强度在朗格拉普岛上的分布。在过去的 20 多年里，朗格拉普岛核辐射数据集在多篇文章中作为案例分析出现，用于算法模型的比较。1998 年 Peter J. Diggle 等首次提出蒙特卡洛极大似然方法估计不带块金效应的响应变量服从泊松分布的空间广义混合效应模型的参数，分析了朗格拉普岛上核辐射强度的空间分布[@Diggle1998]。2004 年 Ole F Christensen 在 Peter J. Diggle 等人的基础上添加了块金效应，同样使用蒙特卡洛极大似然方法估计了模型中的参数[@Christensen2004]。由于现有算法表现受真实数据影响比较大，随后，2006 年 Ole F Christensen 等又提出更加稳健的 Langevin-Metropolis 算法，辅以重参数化技巧提升算法性能，可以在马尔可夫链混合和收敛方面独立于数据，并在朗格拉普岛核辐射数据中做了实验，体现出预期效果[@Christensen2006]。2015 年 Wagner Hugo Bonat 等在朗格拉普岛核辐射数据和蚕豆根腐病数据中比较了 MCMC 算法，MCEM 算法和修正的拉普拉斯近似算法，发现拉普拉斯近似可以提供类似的结果，基于剖面似然可以获得模型参数的置信区间，相比于模拟算法，不需要算法调参和收敛分析 [@Wagner2015]。2016 年 Erlis Ruli 等提出改进的拉普拉斯近似算法，用于边际似然函数，处理高维随机效应的积分，比较了现有的一些基于似然函数的推断方法，体现出渐进误差更小，在朗格拉普岛核辐射强度预测中更加精确[@Erlis2016]。对算法实现过程感兴趣的读者可以查阅前述参考文献。

## 数据说明 {#sec-rongelap-data}

第二次世界大战中，美国在吉尔伯特及马绍尔群岛战事中占领了该群岛。上世纪 50 年代，在该群岛的比基尼环礁中进行了许多核实验，对该群岛造成无法弥补的环境损害。位于南太平洋的朗格拉普环礁是马绍尔群岛的一部分，朗格拉普岛是朗格拉普环礁的主岛，被核爆炸后产生的放射性尘埃笼罩了，受到严重的核辐射影响，从度假胜地变成人间炼狱，居民出现上吐下泻、皮肤灼烧、脱发等。即使是 1985 年以后，那里仍然无人居住，居民担心核辐射对身体健康的影响。又几十年后，一批科学家来到该岛研究生态恢复情况，评估当地居民重返家园的可行性，实际上，该岛目前仍然不适合人类居住，只有经批准的科学研究人员才能登岛。

```{r}
#| label: fig-rongelap-atoll
#| fig-cap: "朗格拉普环礁和朗格拉普岛"
#| code-fold: true
#| echo: !expr knitr::is_html_output()
#| fig-showtext: true
#| message: false

# 从网站 https://gadm.org/ 下载国家各级行政区划数据
# geodata 包返回 SpatVector 类型的数据对象
mhl_map_gadm <- geodata::gadm(country = "MHL", level = 1, path = "data/")
library(sf)
# SpatVector 类型转为 sf 类型
mhl_map_gadm <- st_as_sf(mhl_map_gadm)
library(ggplot2)
# 添加虚线框用来圈选朗格拉普岛
rongelap_sfp <- st_sfc(st_polygon(x = list(rbind(
  c(166.82, 11.14),
  c(166.82, 11.183),
  c(166.92, 11.183),
  c(166.92, 11.14),
  c(166.82, 11.14)
)), dim = "XY"), crs = 4326)
# 文本标记
text_df <- tibble::tribble(
  ~x, ~y, ~text,
  166.75, 11.35, "朗格拉普环礁",
  166.97, 11.16, "朗格拉普岛"
)
text_df <- as.data.frame(text_df)
text_sf <- st_as_sf(text_df, coords = c("x", "y"), dim = "XY", crs = 4326)
# 朗格拉普环礁
ggplot() +
  geom_sf(data = mhl_map_gadm) +
  geom_sf(data = rongelap_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  geom_sf_text(data = text_sf, aes(label = text), color = "gray20",
               fun.geometry = sf::st_centroid) +
  coord_sf(xlim = c(166.6, 167.1), ylim = c(11.14, 11.5)) +
  theme_minimal() +
  labs(x = "经度", y = "纬度")
```

[Ole F. Christensen](https://orcid.org/0000-0002-8230-8062) 和 Paulo J. Ribeiro Jr 将 `rongelap` 数据集存放在 [**geoRglm**](https://cran.r-project.org/package=geoRglm)[@Christensen2002] 包内，后来，**geoRglm** 不维护，已从 CRAN 移除了，笔者从他们主页下载了数据。数据集 `rongelap` 记录了 157 个测量点的伽马射线强度，即在时间间隔 `time` （秒）内放射的粒子数目 `counts`（个），测量站点的横纵坐标分别为 `cX` （米）和 `cY`（米），坐标参考原点在岛的东北， @fig-rongelap-location 右上角的位置。下 @tbl-rongelap-nuclear-data 展示部分朗格拉普岛核辐射检测数据及海岸线坐标数据。

```{r}
#| label: tbl-rongelap-nuclear-data
#| tbl-cap: "朗格拉普岛核辐射检测数据及海岸线坐标数据"
#| tbl-subcap:
#|   - "核辐射检测数据"
#|   - "海岸线坐标数据"
#| layout-ncol: 2
#| code-fold: true
#| echo: !expr knitr::is_html_output()

# 加载数据
rongelap <- readRDS(file = "data/rongelap.rds")
rongelap_coastline <- readRDS(file = "data/rongelap_coastline.rds")

library(knitr)
knitr::kable(head(rongelap, 6),
  col.names = c("cX 横坐标", "cY 纵坐标", "counts 数目", "time 时间")
)
knitr::kable(head(rongelap_coastline, 6),
  col.names = c("cX 横坐标", "cY 纵坐标")
)
```

```{r}
#| label: fig-rongelap-location
#| fig-cap: "采样点在岛上的分布"
#| fig-showtext: true
#| fig-width: 7
#| fig-height: 4
#| code-fold: true
#| echo: !expr knitr::is_html_output()

library(lattice)
xyplot(cY ~ cX,
  data = rongelap, pch = 19, cex = 0.25,
  xlab = "横坐标（米）",
  ylab = "纵坐标（米）",
  scales = list(
    # 去掉图形上边、右边多余的刻度线
    x = list(alternating = 1, tck = c(1, 0)),
    y = list(alternating = 1, tck = c(1, 0))
  ),
  # 减少三维图形的边空
  lattice.options = list(
    layout.widths = list(
      left.padding = list(x = 0, units = "inches"),
      right.padding = list(x = -0.15, units = "inches")
    ),
    layout.heights = list(
      bottom.padding = list(x = -0.1, units = "inches"),
      top.padding = list(x = -0.2, units = "inches")
    )
  ),
  panel = function(...) {
    panel.grid(h = -1, v = -1, ...)
    panel.points(col = "black", ...)
    panel.lines(
      x = rongelap_coastline$cX,
      y = rongelap_coastline$cY,
      col = "black"
    )
  },
  par.settings = list(axis.line = list(col = "black"))
)
```

## 数据探索 {#sec-rongelap-exploration}

朗格拉普岛呈月牙形，有数千米长，但仅几百米宽，十分狭长。采样点在岛上的分布如 @fig-rongelap-location 所示，主网格以约 200 米的间隔采样，在岛屿的东北和西南方各有两个密集采样区，每个网格采样区是 $5 \times 5$ 方式排列的，上下左右间隔均为 40 米。朗格拉普岛上各个检测站点的核辐射强度如 @fig-rongelap-location-zoom 所示，颜色越深表示辐射越强，四个检测区的采样阵列非常密集，通过局部放大展示了最左侧的一个检测区，它将作为后续模型比较的参照区域。

```{r}
#| label: fig-rongelap-location-zoom
#| fig-cap: "岛上各采样点的核辐射强度"
#| fig-width: 8
#| fig-height: 4
#| fig-showtext: true
#| code-fold: true
#| echo: !expr knitr::is_html_output()

library(ggplot2)

p1 <- ggplot() +
  geom_path(data = rongelap_coastline, aes(x = cX, y = cY)) +
  geom_point(data = rongelap, aes(x = cX, y = cY, color = counts / time), size = 0.5) +
  scale_x_continuous(n.breaks = 7) +
  scale_color_distiller(palette = "Greys", direction = 1) +
  geom_segment(
    data = data.frame(x = -5560, xend = -5000, y = -3000, yend = -2000),
    aes(x = x, y = y, xend = xend, yend = yend),
    arrow = arrow(length = unit(0.03, "npc"))
  ) +
  theme_bw() +
  labs(x = "横坐标（米）", y = "纵坐标（米）", color = "辐射强度")

p2 <- ggplot() +
  geom_point(data = rongelap, aes(x = cX, y = cY, color = counts / time), 
             size = 2, show.legend = FALSE) +
  scale_color_distiller(palette = "Greys", direction = 1) +
  coord_cartesian(xlim = c(-5700, -5540), ylim = c(-3260, -3100)) +
  theme_bw() +
  labs(x = NULL, y = NULL)

p1
print(p2, vp = grid::viewport(x = .25, y = .725, width = .275, height = .45))
```

**ggplot2** 包只能在二维平面上展示数据，对于空间数据，立体图形似乎更加符合数据背景。**lattice** 包的函数 `cloud()` 可以绘制三维的散点图，组合点和线两种绘图元素构造出射线，线越长表示放射性越强，以射线搭配放射状的粒子辐射，似乎也更加贴切，如 @fig-rongelap-concentration 所示，展示朗格拉普岛上采样点的位置及检测到的辐射强度。

```{r}
#| label: fig-rongelap-concentration
#| fig-cap: "岛上各采样点的辐射强度"
#| fig-showtext: true
#| fig-width: 6
#| fig-height: 5
#| code-fold: true
#| echo: !expr knitr::is_html_output()

cloud(counts / time ~ cX * cY,
  data = rongelap, col = "black",
  scales = list(arrows = FALSE, col = "black"),
  xlab = list("横坐标（米）", rot = 20),
  ylab = list("纵坐标（米）", rot = -50),
  zlab = list("辐射强度", rot = 90),
  type = c("p", "h"), pch = 16, lwd = 0.5,
  # 减少三维图形的边空
  lattice.options = list(
    layout.widths = list(
      left.padding = list(x = -.6, units = "inches"),
      right.padding = list(x = -1.0, units = "inches")
    ),
    layout.heights = list(
      bottom.padding = list(x = -.8, units = "inches"),
      top.padding = list(x = -1.0, units = "inches")
    )
  ),
  # 设置坐标轴字体大小
  par.settings = list(
    axis.line = list(col = "transparent")
  ),
  # 设置三维图的观察方位
  screen = list(z = 30, x = -65, y = 0)
)
```

```{r}
#| eval: false
#| code-fold: true
#| echo: !expr knitr::is_html_output()

# 可选的替代三维图形
library(plot3D)
with(rongelap, {
  par(mar = c(0.1, 2.5, 0.1, 0.1))
  scatter3D(
    x = cX, y = cY, z = counts / time,
    xlab = "\nX", ylab = "\nY", zlab = "\nZ",
    pch = 16, type = "h", ticktype = "detailed",
    phi = 40, theta = -30, r = 50, d = 0.1,
    expand = 0.5, box = TRUE,
    # bty = "u",
    bty = "f",
    col = "black", asp = 1, col.axis = "gray"
  )
})

library(rgl)
view3d(
  theta = 0, phi = -45, fov = 30,
  zoom = 1, interactive = TRUE
)
# 将连续型数据向量转化为颜色向量
colorize_numeric <- function(x) {
  scales::col_numeric(palette = "viridis", domain = range(x))(x)
}
# 在数据集 quakes 上添加新的数据 color
rongelap <- within(rongelap, {
  lambda <- counts / time
  color <- colorize_numeric(lambda)
})
# 绘制图形
with(rongelap, {
  plot3d(
    x = cX, y = cY, z = lambda, col = color,
    type = "h",
    xlab = "南北方向", ylab = "东西方向",
    zlab = "辐射强度"
  )
  points3d(x = cX, y = cY, z = lambda,
           col = color, size = 5)
})

# 绘制图形
with(rongelap, {
  open3d()
  spheres3d(x = cX, y = cY, z = lambda, 
            radius = lambda, color = color)
})
```

## 数据建模 {#sec-rongelap-modeling}

核辐射是由放射元素衰变产生的，通常用单位时间释放出来的粒子数目表示辐射强度，也是核辐射强度，因此，建立泊松型广义线性模型分析数据。

```{r}
fit_rongelap_glm <- glm(counts ~ 1,
  family = poisson(link = "log"),
  offset = log(time), data = rongelap
)
summary(fit_rongelap_glm)
```

::: callout-note
当 `family = poisson(link = "log")` 时，响应变量只能是正整数，所以不能放 `counts / time`。泊松广义线性模型是对辐射强度建模，辐射强度与位置 `cX` 和 `cY` 有关。当响应变量为放射出来的粒子数目 `counts` 时，为了表示辐射强度，需要设置参数 `offset`，表示与放射粒子数目对应的时间间隔`time`。联系函数是对数函数，因此时间间隔需要取对数。
:::

从 @fig-rongelap-glm-residuals 不难看出，颜色深和颜色浅的点分别聚集在一起，且与周围点的颜色呈现层次变化，拟合残差存在明显的空间相关性。如果将位置变量 `cX` 和 `cY` 加入广义线性模型，也会达到统计意义上的显著。

```{r}
#| label: fig-rongelap-glm-residuals
#| fig-cap: "辐射强度的拟合残差的空间分布"
#| fig-width: 7
#| fig-height: 3.5
#| fig-showtext: true
#| echo: true
#| code-fold: true

rongelap$glm_residuals <- residuals(fit_rongelap_glm)
ggplot(rongelap, aes(x = cX, y = cY)) +
  geom_point(aes(colour = glm_residuals / time), size = 0.5) +
  scale_color_distiller(palette = "Greys", direction = 1) +
  theme_void() +
  labs(color = "残差")
```

从实际场景出发，也不难理解，位置信息是非常关键的。进一步，充分利用位置信息，精细建模是很有必要的。相邻位置的核辐射强度是相关的，离得近的比离得远的更相关。简单的广义线性模型并没有考虑距离相关性，它认为各个观测点的数据是相互独立的。因此，考虑采用广义线性混合效应模型，在广义线性模型的基础上添加位置相关的随机效应，用以刻画未能直接观测到的潜在影响。简单起见，假定随机效应之间是相互独立的正态分布。

$$
\begin{aligned}
\log(\lambda_{j}) &= \beta_{0j} \\
\beta_{0j} &=\gamma_{00} + U_{0j}
\end{aligned}
$$

其中响应变量服从泊松分布，即 $Y_{j} \sim \mathrm{Poisson}(t_{j}\lambda_{j})$ ，$\lambda_{j}$ 表示辐射强度，$t_{j}$ 表示时间，随机效应 $\beta_{0j}$ 服从均值为 0，方差为 $\tau_{00}^2$ 的正态分布，即 $U_{0j} \sim \mathcal{N}(0,\tau_{00}^2)$ 。截距项（常数项） $\gamma_{00}$ 可以理解为背景辐射，为简单起见，假定为常数。如果全岛观察到有系统性的背景辐射变化，可以考虑用随机变量来建模背景辐射。157 个检测站点的残差服从独立同分布的正态分布，即 $\epsilon_{j} \sim \mathcal{N}(0,\sigma^2)$，$j=1,2,\cdots,157$ 。

::: callout-tip
根据目前已有的数据，没有收集影响辐射强度的其它因素，模型中也就没有加其它观测变量，所以，只有截距项是变化的。如果有其他因素，可以在 $\beta_{0j}$ 后加入，比如 $\beta_{1j}x_{j}$。进一步，如果在 157 个位置处反复测量多次放射数据，则模型又可变为重复测量模型。

$$
\begin{aligned}
\log(\lambda_{ij}) &= \beta_{0j} +\beta_{1j}x_{1ij} \\
\beta_{0j} &=\gamma_{00} + U_{0j} \\
\beta_{1j} &=\gamma_{10} + U_{1j} \\
\begin{bmatrix}
    U_{0j} \\
    U_{1j}
\end{bmatrix}
&\sim \mathcal{N}
\left(
\begin{bmatrix}
    0  \\
    0 
\end{bmatrix}
,
\begin{bmatrix}
    \tau_{00}^2 & \tau_{01} \\
    \tau_{01} & \tau_{10}^2
\end{bmatrix}
\right)\\
Y_{ij} &\sim \mathrm{Poisson}(t_{ij}\lambda_{ij})
\end{aligned}
$$

其中下标 $i$ 代表重复测量，则 $Y_{ij}$ 表示第 $i$ 次在第 $j$ 个位置检测到的辐射量，$x_{1ij}$ 表示第1个协变量第$i$次在第$j$个位置上的观测值，一种非常贴合实际的情形是 $x_{1ij}$ 就代表时间 $T_{ij}$ ，表示科学家每隔 5 年登岛收集数据，此后登岛多次，$T_{ij}$ 意味着第 $i$ 次登岛收集各个检测点的辐射数据。变截距 $\beta_{0j}$ 和变系数 $\beta_{1j}$ 同时存在，且二者联合分布为二元正态分布，残差仍然假定独立同正态分布 $\epsilon_{ij} \sim \mathcal{N}(0,\sigma^2)$ 。
:::

**lme4** 包[@Bates2015]是拟合广义线性混合效应模型的金标准，模型拟合函数 `glmer()` 的使用非常类似 Base R 提供的函数 `glm()`。

```{r}
library(Matrix)
library(lme4)
rongelap$dummary <- 1:157
fit_rongelap_glmer <- glmer(counts ~ 1 + (1 | dummary),
  family = poisson(link = "log"),
  offset = log(time), data = rongelap
)
summary(fit_rongelap_glmer)
```

从拟合模型的结果来看，参数 $\gamma_{00} = 1.94405, \tau_{00}^2 = 0.2223$ 。将每个位置看作单独的一个随机效应，比较两个模型的对数似然，后者变大了，这意味着模型拟合效果更好了。

```{r}
# 广义线性模型
logLik(fit_rongelap_glm)
# 广义线性混合效应模型
logLik(fit_rongelap_glmer)
```

进一步，去掉随机效应相互独立的假设，随机效应之间存在相关性结构，这更符合位置效应存在相互影响的实际情况。核辐射强度的空间分布

```{r}
#| label: fig-rongelap-vario
#| echo: true
#| fig-cap: "核辐射强度的经验变差图"
#| fig-width: 5
#| fig-height: 4
#| fig-showtext: true

# 拟合存在异方差的一般线性模型
fit_rongelap_gls <- nlme::gls(counts / time ~ 1, data = rongelap)
# 残差的空间相关性
fit_rongelap_vario <- nlme::Variogram(fit_rongelap_gls,
  form = ~ cX + cY, data = rongelap, resType = "response"
)
# 经验半变差图
plot(fit_rongelap_vario,
  col.line = "black", scales = list(
    # 去掉图形上边、右边多余的刻度线
    x = list(alternating = 1, tck = c(1, 0)),
    y = list(alternating = 1, tck = c(1, 0))
  ), par.settings = list(
    plot.symbol = list(pch = 20, col = "black"),
    plot.line = list(lwd = 1)
  ),
  xlab = "距离（米）", ylab = "半变差函数值"
)
```

结合 @fig-rongelap-vario ， 核辐射强度的经验变差图呈现的空间相关性，也因此要引入带空间随机效应的广义线性混合效应模型。克里金插值方法

```{r}
fit_rongelap_krige <- nlme::gls(
  model = counts / time ~ 1, data = rongelap,
  correlation = nlme::corExp(form = ~ cX + cY, nugget = TRUE)
)
summary(fit_rongelap_krige)
```

根据 ${}^{137}\mathrm{Cs}$ 放出的伽马射线在 $N=157$ 站点不同时间间隔 $t(d_{i})$ 的辐射量，建立泊松型空间广义线性混合效应模型。

$$
\begin{aligned}
\log\{\lambda(d_i)\} & =  \beta + S(d_{i}) \\
\log\{\lambda(d_i)\} & =  \beta + S(d_{i}) + Z_{i} \\
Y_{i} &\sim \mathrm{Poisson}(t(d_{i})\lambda(d_i))
\end{aligned}
$$ {#eq-rongelap-poisson-sglmmm}

模型中，截距 $\beta$ 相当于平均水平，放射粒子数$Y_{i}$作为响应变量服从均值为 $t(d_{i})\lambda(d_i)$ 的泊松分布，$\lambda(d_i)$ 可理解为辐射强度，$S(d_{i})$ 表示位置 $d_i$ 处的空间效应，随机过程 $S(d)$ 的自协方差函数常用的有指数型、幂二次指数型和 Matérn 型，形式如下：

$$
\begin{aligned}
\mathrm{Cov}( S(d_i), S(d_j) ) &= \sigma^2 \exp\big( -\frac{\|d_i -d_j\|_{2}}{\phi} \big) \\
\mathrm{Cov}( S(d_i), S(d_j) ) &= \sigma^2 \exp\big( -\frac{\|d_i -d_j\|_{2}^{2}}{2l^2} \big) \\
\mathrm{Cov}( S(d_i), S(d_j) ) &= \sigma^2 \frac{2^{1 - \nu}}{\Gamma(\nu)}
\left(\sqrt{2\nu}\frac{\|d_i -d_j\|_{2}}{\rho}\right)^{\nu}
K_{\nu}\left(\sqrt{2\nu}\frac{\|d_i -d_j\|_{2}}{\rho}\right) \\
K_{\nu}(x) &= \int_{0}^{\infty}\exp(-x \cosh t) \cosh (\nu t) \mathrm{dt}
\end{aligned}
$$ {#eq-matern-formula}

其中，$K_{\nu}$ 表示阶数为 $\nu$ 的修正的第二类贝塞尔函数，$\Gamma(\cdot)$ 表示伽马函数，当 $\nu = 1/2$ ，Matérn 型将简化为指数型，当 $\nu = \infty$ 时，Matérn 型将简化为幂二次指数型。固定 $\sigma = 1$，自协方差函数图像如 @fig-matern-fun 所示，不难看出，$\nu$ 影响自协方差函数的平滑性，控制点与点之间相关性的变化，$\nu$ 越大相关性越迅速地递减。$\rho$ 控制协方差函数的范围，$\rho$ 越大相关性辐射距离越远。对模型来说，它们都是超参数。

```{r}
#| label: fig-matern-fun
#| fig-cap: "Matérn 型协方差函数曲线"
#| fig-showtext: true
#| code-fold: true
#| echo: !expr knitr::is_html_output()
# 参数 x 两点之间的距离，要求 x 大于 0
# 参数 sigma nu rho 分别与前述公式参数对应
cov_matern_nu <- function(x, sigma = 1, nu = 3 / 2, rho = 5) {
  phi <- sqrt(2 * nu) * x / rho
  sigma^2 * 2^(1 - nu) / gamma(nu) * phi^nu * besselK(x = phi, nu = nu)
}
library(ggplot2)
mesh_matern <- expand.grid(
  x = seq(from = 0.01, to = 20, by = 0.04),
  sigma = 1, nu = c(5 / 2, 3 / 2, 1 / 2), rho = c(5, 2.5)
)

mesh_matern$fv <- cov_matern_nu(
  x = mesh_matern$x, sigma = mesh_matern$sigma,
  nu = mesh_matern$nu, rho = mesh_matern$rho
)

mesh_matern$nu_math <- paste("nu==", mesh_matern$nu, sep = "")
mesh_matern$rho_math <- paste("rho==", mesh_matern$rho, sep = "")

ggplot(data = mesh_matern, aes(x = x, y = fv)) +
  geom_line(aes(color = nu_math)) +
  facet_wrap(vars(rho_math), ncol = 1, labeller = ggplot2::label_parsed) +
  scale_color_grey(labels = expression(nu == 0.5, nu == 1.5, nu == 2.5)) +
  theme_minimal(base_size = 13) +
  labs(x = "距离", y = "相关性", color = expression(nu))
```

$S(d),d \in \mathbb{R}^2$ 是平稳空间高斯过程，且 $Z_i$ 之间相互独立同正态分布 $\mathcal{N}(0,\tau^2)$ ，$Z_i$ 表示与空间效应无关的块金效应，即非空间的随机效应，可以理解为测量误差、空间变差或背景辐射，这里 $i = 1,\ldots, 157$。

**spaMM** 包使用语法和前面介绍的 **lme4** 包一样，它可以拟合空间广义线性混合效应模型，支持非常丰富的统计建模功能，从简单线性模型到相对复杂的空间广义线性混合效应模型，拟合函数 `fitme()` 提供统一的使用语法，输出一个 **spaMM** 包内建的 HLfit 类型的数据对象。

```{r}
#| message: false

library(spaMM)
fit_rongelap_spamm <- fitme(counts ~ 1 + Matern(1 | cX + cY) + offset(log(time)),
  family = poisson(link = "log"), data = rongelap
)
summary(fit_rongelap_spamm)
```

从输出结果来看，模型固定效应的截距项 1.824，随机效应的方差为 0.2973，自协方差函数中参数 $\nu = 0.3642$，对比 **spaMM** 包的函数 `Matern()` 实现的 Matérn 型自相关函数公式与 @eq-matern-formula ，输出结果需要转化一下，以符合 @eq-matern-formula ，则 $\rho = \sqrt{2 \times 0.364211759} / 0.0061486 = 138.81$ ，即空间相关性的最大影响距离为 138.8 米，对数似然函数值为 -1317.551。对数似然函数的值又变大了，拟合效果更好了，相比于从广义线性模型到广义线性混合效应模型，提升不是特别多，一般来说，模型越复杂提升空间会越小，过于复杂也没有必要。

## 模型预测 {#sec-rongelap-predict}

接下来，预测给定的边界（海岸线）内任意位置的核辐射强度，展示全岛的核辐射强度分布。先从点构造多边形数据，再将多边形做网格划分，继而将网格中心点作为模型输入获得核辐射强度的预测值。

海岸线上取一些点，点的数量越多，对海岸线的刻画越精确，这在转弯处体现得非常明显。海岸线的数据是以成对的坐标构成，导入 R 语言中，是以数据框的形式存储，为了方便后续的操作，引入空间数据操作的 **sf** 包[@Pebesma2018]，将核辐射数据和海岸线数据转化为 POINT 类型的空间点数据。

```{r}
library(sf)
rongelap_sf <- st_as_sf(rongelap, coords = c("cX", "cY"), dim = "XY")
rongelap_coastline_sf <- st_as_sf(rongelap_coastline, coords = c("cX", "cY"), dim = "XY")
```

**sf** 包提供了大量操作空间数据的函数，比如函数 `st_bbox()` 计算一组空间数据的矩形边界，获得左下和右上两个点的坐标 `(xmin,ymin)` 和`(xmax,ymax)`，下面还会陆续涉及其它空间数据操作。

```{r}
st_bbox(rongelap_coastline_sf)
```

`rongelap_coastline_sf` 数据集是朗格拉普岛海岸线的采样点坐标，是一个 POINT 类型的数据，为了以海岸线为边界生成规则网格，首先连接点 POINT 构造多边形 POLYGON 对象。POINT 和 POLYGON 是 **sf** 包内建的基础的几何类型，其它复杂的空间类型是由它们衍生而来。函数 `st_geometry` 提取空间点数据中的几何元素，再用函数 `st_combine` 将点组合起来，最后用函数 `st_cast` 转换成 POLYGON 多边形类型。

```{r}
rongelap_coastline_sfp <- st_cast(st_combine(st_geometry(rongelap_coastline_sf)), "POLYGON")
```

@fig-point-to-polygon 上下两个子图分别展示空间点集和多边形。上图是原始的采样点数据，下图是以点带线，串联 POINT 数据构造 POLYGON 数据后的多边形。后续的数据操作将围绕这个多边形展开。

```{r}
#| label: fig-point-to-polygon
#| fig-cap: "朗格拉普岛海岸线的表示"
#| fig-subcap:
#| - 点数据
#| - 多边形数据
#| layout-ncol: 1
#| fig-width: 5
#| fig-height: 3
#| fig-showtext: true
# 点集
library(ggplot2)
ggplot(rongelap_coastline_sf) +
  geom_sf(size = 0.5) +
  theme_void()
# 多边形
ggplot(rongelap_coastline_sfp) +
  geom_sf(fill = "white", linewidth = 0.5) +
  theme_void()
```

为了确保覆盖整个岛，处理好边界问题，需要一点缓冲空间，就是说在给定的边界线外围再延伸一段距离，构造一个更大的多边形，这可以用函数 `st_buffer()` 实现，根据海岸线构造缓冲区，得到一个 POLYGON 类型的几何数据对象。考虑到朗格拉普岛的实际大小，缓冲距离选择 50 米。

```{r}
rongelap_coastline_buffer <- st_buffer(rongelap_coastline_sfp, dist = 50)
```

缓冲区构造出来的效果如 @fig-rongelap-buffer 所示，为了便于与海岸线对比，图中将采样点、海岸线和缓冲区都展示出来了。

```{r}
#| label: fig-rongelap-buffer
#| fig-cap: "朗格拉普岛海岸线及其缓冲区"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true

ggplot() +
  geom_sf(data = rongelap_sf, size = 0.5) +
  geom_sf(data = rongelap_coastline_sfp, fill = NA, color = "gray30") +
  geom_sf(data = rongelap_coastline_buffer, fill = NA, color = "black") +
  theme_void()
```

接下来，利用函数 `st_make_grid()` 根据朗格拉普岛海岸缓冲线构造网格，朗格拉普岛是狭长的，因此，网格是 $75\times 150$ 的，意味着水平方向 75 行，垂直方向 150 列。网格的疏密程度是可以调整的，网格越密，格点越多，核辐射强度分布越精确，计算也越耗时。

```{r}
# 构造带边界约束的网格
rongelap_coastline_grid <- st_make_grid(rongelap_coastline_buffer, n = c(150, 75))
```

函数 `st_make_grid()` 根据 `rongelap_coastline_buffer` 的矩形边界网格化，效果如 @fig-rongelap-grid 所示，依次添加了网格、海岸线和缓冲区。实际上，网格只需要覆盖朗格拉普岛即可，岛外的部分是大海，不需要覆盖，根据现有数据和模型对岛外区域预测核辐射强度也没有意义，因此，在后续的操作中，岛外的网格都要去掉。函数 `st_make_grid()` 除了支持方形网格划分，还支持六边形网格划分。

```{r}
#| label: fig-rongelap-coastline-grid
#| fig-cap: "朗格拉普岛规则化网格操作"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true

ggplot() +
  geom_sf(data = rongelap_coastline_grid, fill = NA, color = "gray") +
  geom_sf(data = rongelap_coastline_sfp, fill = NA, color = "gray30") +
  geom_sf(data = rongelap_coastline_buffer, fill = NA, color = "black") +
  theme_void()
```

接下来，调用 **sf** 包函数 `st_intersects()` 将小网格落在缓冲区和岛内的筛选出来，一共 1612 个小网格，再用函数 `st_centroid()` 计算这些网格的中心点坐标。函数 `st_intersects()` 的作用是对多边形和网格取交集，包含与边界线交叉的网格，默认返回值是一个稀疏矩阵，与索引函数 `[.sf` （这是 **sf** 包扩展 `[` 函数的一个例子）搭配可以非常方便地过滤出目标网格。与之相关的函数 `st_crosses()` 可以获得与边界线交叉的网格。

```{r}
# 将 sfc 类型转化为 sf 类型
rongelap_coastline_grid <- st_as_sf(rongelap_coastline_grid)
rongelap_coastline_buffer <- st_as_sf(rongelap_coastline_buffer)
rongelap_grid <- rongelap_coastline_grid[rongelap_coastline_buffer, op = st_intersects]
# 计算网格中心点坐标
rongelap_grid_centroid <- st_centroid(rongelap_grid)
```

过滤出来的网格如 @fig-rongelap-grid 所示，全岛网格化后，图中将朗格拉普岛海岸线、网格都展示出来了。网格的中心点将作为新的坐标数据，后续要在这些新的坐标点上预测核辐射强度。

```{r}
#| label: fig-rongelap-grid
#| fig-cap: "朗格拉普岛规则网格划分结果"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true

ggplot() +
  geom_sf(data = rongelap_coastline_sfp, 
          fill = NA, color = "gray30", linewidth = 0.5) +
  geom_sf(data = rongelap_grid, fill = NA, color = "gray30") +
  theme_void()
```

函数 `st_coordinates()` 抽取网格中心点的坐标并用函数 `as.data.frame()` 转化为数据框类型，新数据的列名需要和训练数据保持一致，最后补充漂移项 `time`，以便输入模型中。漂移项并不影响核辐射强度，指定为 300 或 400 都可以。

```{r}
rongelap_grid_df <- as.data.frame(st_coordinates(rongelap_grid_centroid))
colnames(rongelap_grid_df) <- c("cX", "cY")
rongelap_grid_df$time <- 300
```

将数据输入 **spaMM** 包拟合的模型对象 `fit_rongelap_spamm`，并将模型返回的结果整理成数据框，再与采样点数据合并。`predict()` 是一个泛型函数，**spaMM** 包为模型对象提供了相应的预测方法。

```{r}
rongelap_grid_pred <- predict(fit_rongelap_spamm,
  newdata = rongelap_grid_df, type = "response"
)
rongelap_grid_df$pred <- as.vector(rongelap_grid_pred)
```

将预测结果以散点图的形式呈现到图上，考虑到核辐射在全岛的分布应当是连续性的，空间连续性也是这类模型的假设，接下来要绘制热力图。

```{r}
#| label: fig-rongelap-pred-point
#| fig-cap: "网格中心点的核辐射强度预测值"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true

rongelap_grid_sf <- st_as_sf(rongelap_grid_df, coords = c("cX", "cY"), dim = "XY")
ggplot() +
  geom_sf(data = rongelap_grid_sf, aes(color = pred / time), 
          show.legend = FALSE, size = 0.5) +
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.5
  ) +
  scale_color_distiller(palette = "Greys", direction = 1) +
  theme_void()
```

为了绘制热力图，利用 **stars** 包[@stars2022]将预测数据按原网格化的精度转化成栅格对象，裁减超出朗格拉普岛海岸线以外的内容。

```{r}
library(abind)
library(stars)
rongelap_grid_stars <- st_rasterize(rongelap_grid_sf, nx = 150, ny = 75)
rongelap_stars <- st_crop(x = rongelap_grid_stars, y = rongelap_coastline_sfp)
```

除了矢量栅格化函数 `st_rasterize()` 和栅格剪裁函数 `st_crop()` ，**stars** 包还提供栅格数据图层 `geom_stars()`，这可以和 **ggplot2** 内置的图层搭配使用。下 @fig-rongelap-pred-stars 是 **ggplot2** 包和**grid** 包一起绘制的辐射强度的热力分布图。图左侧一小一大两个虚线框是放大前后的部分区域，展示朗格拉普岛核辐射强度的局部变化。

```{r}
#| label: fig-rongelap-pred-stars
#| fig-cap: "朗格拉普岛核辐射强度的分布"
#| fig-width: 7
#| fig-height: 4.5
#| fig-showtext: true
#| echo: !expr knitr::is_html_output()
#| code-fold: true

# 虚线框数据
dash_sfp <- st_polygon(x = list(rbind(
  c(-6000, -3600),
  c(-6000, -2600),
  c(-5000, -2600),
  c(-5000, -3600),
  c(-6000, -3600)
)), dim = "XY")
# 主体内容
p3 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred / time)
  ) +
  # 海岸线
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.5
  ) +
  # 图例
  scale_fill_distiller(palette = "Greys", direction = 1) +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  # 箭头
  geom_segment(
    data = data.frame(x = -5500, xend = -5000, y = -2600, yend = -2250),
    aes(x = x, y = y, xend = xend, yend = yend),
    arrow = arrow(length = unit(0.03, "npc"))
  ) +
  theme_void() +
  labs(fill = "辐射强度") +
  theme(legend.position = c(0.95, 0.2))

p4 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred / time), show.legend = FALSE
  ) +
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.75
  ) +
  scale_fill_distiller(palette = "Greys", direction = 1) +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  theme_void() +
  coord_sf(expand = FALSE, xlim = c(-6000, -5000), ylim = c(-3600, -2600))
# 叠加图形
p3
print(p4, vp = grid::viewport(x = .25, y = .625, width = .45, height = .45))
```

美国当年是在比基尼环礁做的氢弹核试验，试验地与朗格拉普岛相距 100 多英里，核辐射羽流受大气、海洋环流等影响，漂流到朗格拉普岛，又受朗格拉普岛周围水文、地理环境影响，核辐射在全岛的分布是不均匀的，颜色越深表示核辐射越严重。
