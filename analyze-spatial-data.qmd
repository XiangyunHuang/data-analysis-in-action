# 空间分析 {#sec-analysis-spatial-data}

```{r}
#| echo: false

source("_common.R")
```


## 预测核污染的分布 {#sec-nuclear-pollution-concentration}

本小节将对真实数据分析和建模，任务是预测核污染浓度在朗格拉普岛上的分布。

### 数据说明 {#sec-rongelap-data}

第二次世界大战中，美国在吉尔伯特及马绍尔群岛战事中占领了该群岛。上世纪 50 年代，在该群岛的比基尼环礁中进行了许多核实验，对该群岛造成无法弥补的环境损害。位于南太平洋的朗格拉普环礁是马绍尔群岛的一部分，朗格拉普岛是朗格拉普环礁的主岛，被核爆炸后产生的放射性尘埃笼罩了，受到严重的核辐射影响，从度假胜地变成人间炼狱，居民出现上吐下泻、皮肤灼烧、脱发等。即使是 1985 年以后，那里仍然无人居住，居民担心核辐射对身体健康的影响。又几十年后，一批科学家来到该岛研究生态恢复情况，评估当地居民重返家园的可行性，实际上，该岛目前仍然不适合人类居住，只有经批准的科学研究人员才能登岛。数据集 `rongelap` 记录了 157 个测量点的伽马射线强度，即在时间间隔 `time` （秒）内放射的粒子数目 `counts`（个），测量站点的横纵坐标分别为 `cX` （米）和 `cY`（米），坐标参考原点在岛的东北，图中右上角的位置。下 @tbl-rongelap-nuclear-data 展示部分朗格拉普岛核污染检测数据及海岸线坐标数据。

```{r}
#| label: fig-marshall-islands-rongelap-atoll
#| fig-cap: "马绍尔群岛和朗格拉普环礁"
#| eval: false
#| echo: false

library(terra)
# 下载边界数据 https://gadm.org/
# 返回 SpatVector 类型的数据对象
mhl_map_gadm <- geodata::gadm(country = "MHL", level = 1, path = "data/")
# 马绍尔群岛
plot(mhl_map_gadm)
# 朗格拉普环礁
plot(mhl_map_gadm, xlim = c(166.82, 166.92), ylim = c(11.14, 11.183))
```

```{r}
#| label: tbl-rongelap-nuclear-data
#| tbl-cap: "朗格拉普岛核污染检测数据及海岸线坐标数据"
#| tbl-subcap:
#|   - "核污染检测数据"
#|   - "海岸线坐标数据"
#| layout-ncol: 2
#| echo: false

rongelap <- readRDS(file = "data/rongelap.rds")
rongelap_coastline <- readRDS(file = "data/rongelap_coastline.rds")

library(knitr)
knitr::kable(head(rongelap, 6),
  col.names = c("横坐标", "纵坐标", "数目", "时间")
)
knitr::kable(head(rongelap_coastline, 6),
  col.names = c("横坐标", "纵坐标")
)
```

::: {.callout-note}
之前，[Ole F. Christensen](https://orcid.org/0000-0002-8230-8062) 和 Paulo J. Ribeiro Jr 将 rongelap 数据集存放在 [**geoRglm**](https://cran.r-project.org/package=geoRglm)[@Christensen2002] 包内，后来，**geoRglm** 不维护，已从 CRAN 移除了。
:::

### 数据探索 {#sec-rongelap-exploration}

朗格拉普岛呈月牙形，有数千米长，但仅几百米宽，十分狭长。采样点在岛上的分布如 @fig-rongelap-location 所示，主网格以约 200 米的间隔采样，在岛屿的东北和西南方各有两个密集采样区，每个网格采样区是 $5 \times 5$ 方式排列的，上下左右间隔均为 40 米。

```{r}
#| label: fig-rongelap-location
#| fig-cap: "采样点在岛上的分布"
#| echo: false
#| fig-showtext: true
#| fig-width: 7
#| fig-height: 4

library(lattice)

xyplot(cY ~ cX,
  data = rongelap, pch = 19, cex = 0.25,
  xlab = "横坐标",
  ylab = "纵坐标",
  scales = list(
    # 去掉图形上边、右边多余的刻度线
    x = list(alternating = 1, tck = c(1, 0)),
    y = list(alternating = 1, tck = c(1, 0))
  ),
  # 减少三维图形的边空
  lattice.options = list(
    layout.widths = list(
      left.padding = list(x = 0, units = "inches"),
      right.padding = list(x = -0.15, units = "inches")
    ),
    layout.heights = list(
      bottom.padding = list(x = -0.1, units = "inches"),
      top.padding = list(x = -0.2, units = "inches")
    )
  ),
  panel = function(...) {
    panel.grid(h = -1, v = -1, ...)
    panel.points(col = "black", ...)
    panel.lines(
      x = rongelap_coastline$cX,
      y = rongelap_coastline$cY,
      col = "black"
    )
  },
  par.settings = list(axis.line = list(col = "black"))
)
```

朗格拉普岛上各个检测站点的核污染浓度，如 @fig-rongelap-location-zoom 所示，鉴于四个集中检测区密集的采样阵列，通过局部放大，突出展示最左侧的一个检测区。

```{r}
#| label: fig-rongelap-location-zoom
#| fig-cap: "岛上各采样点的核辐射强度"
#| fig-width: 8
#| fig-height: 4
#| fig-showtext: true
#| echo: false

library(ggplot2)

p1 <- ggplot() +
  geom_path(data = rongelap_coastline, aes(x = cX, y = cY)) +
  geom_point(data = rongelap, aes(x = cX, y = cY, color = counts / time), size = 0.5) +
  scale_x_continuous(n.breaks = 7) +
  scale_color_binned(type = colorspace::scale_color_binned_sequential, palette = "Grays") +
  geom_segment(
    data = data.frame(x = -5560, xend = -5000, y = -3000, yend = -2000),
    aes(x = x, y = y, xend = xend, yend = yend),
    arrow = arrow(length = unit(0.03, "npc"))
  ) +
  theme_bw() +
  labs(x = "横坐标", y = "纵坐标", color = "辐射强度")

p2 <- ggplot() +
  geom_point(data = rongelap, aes(x = cX, y = cY, color = counts / time), size = 2, show.legend = FALSE) +
  scale_color_binned(type = colorspace::scale_color_binned_sequential, palette = "Grays") +
  coord_cartesian(xlim = c(-5700, -5540), ylim = c(-3260, -3100)) +
  theme_bw() +
  labs(x = NULL, y = NULL)

p1
print(p2, vp = grid::viewport(x = .25, y = .725, width = .275, height = .45))
```  

@fig-rongelap-concentration 展示朗格拉普岛上采样点的位置及检测到的辐射强度，线越长表示放射性越强。这是用 **lattice** 包的 `cloud()` 函数绘制的，组合点和线两种基本几何元素。

```{r}
#| label: fig-rongelap-concentration
#| fig-cap: "岛上各采样点的辐射强度"
#| echo: false
#| fig-showtext: true
#| fig-width: 6
#| fig-height: 5

cloud(counts / time ~ cX * cY,
  data = rongelap, col = "black",
  scales = list(arrows = FALSE, col = "black"),
  xlab = list("横坐标", rot = 20),
  ylab = list("纵坐标", rot = -50),
  zlab = list("辐射强度", rot = 90),
  type = c("p", "h"), pch = 16, lwd = 0.5,
  # 减少三维图形的边空
  lattice.options = list(
    layout.widths = list(
      left.padding = list(x = -.6, units = "inches"),
      right.padding = list(x = -1.0, units = "inches")
    ),
    layout.heights = list(
      bottom.padding = list(x = -.8, units = "inches"),
      top.padding = list(x = -1.0, units = "inches")
    )
  ),
  # 设置坐标轴字体大小
  par.settings = list(
    axis.line = list(col = "transparent")
  ),
  # 设置三维图的观察方位
  screen = list(z = 30, x = -65, y = 0)
)
```
```{r}
#| eval: false
#| echo: false

# 可选的替代三维图形
library(scatterplot3d)
with(rongelap, {
  scatterplot3d(
    x = cX, y = cY, z = counts / time,
    xlab = "X", ylab = "Y", zlab = "Z",
    type = "h", color = "black", angle = 20, pch = 16
  )
})

library(plot3D)
with(rongelap, {
  par(mar = c(0.1, 2.5, 0.1, 0.1))
  scatter3D(
    x = cX, y = cY, z = counts / time,
    xlab = "\nX", ylab = "\nY", zlab = "\nZ",
    pch = 16, type = "h", ticktype = "detailed",
    phi = 40, theta = -30, r = 50, d = 0.1,
    expand = 0.5, box = TRUE,
    # bty = "u",
    bty = "f",
    col = "black", asp = 1, col.axis = "gray"
  )
})

library(rgl)
view3d(
  theta = 0, phi = -45, fov = 30,
  zoom = 1, interactive = TRUE
)
# 将连续型数据向量转化为颜色向量
colorize_numeric <- function(x) {
  scales::col_numeric(palette = "viridis", domain = range(x))(x)
}
# 在数据集 quakes 上添加新的数据 color
rongelap <- within(rongelap, {
  lambda <- counts / time
  color <- colorize_numeric(lambda)
})
# 绘制图形
with(rongelap, {
  plot3d(
    x = cX, y = cY, z = lambda, col = color,
    type = "h",
    xlab = "南北方向", ylab = "东西方向",
    zlab = "辐射强度"
  )
  points3d(x = cX, y = cY, z = lambda,
           col = color, size = 5)
})

# 绘制图形
with(rongelap, {
  open3d()
  spheres3d(x = cX, y = cY, z = lambda, 
            radius = lambda, color = color)
})
```

### 数据建模 {#sec-rongelap-modeling}

核污染是由辐射元素衰变产生的，通常用单位时间释放出来的粒子数目表示辐射强度，也是核污染浓度，因此，建立泊松型广义线性模型分析数据。

```{r}
fit_rongelap_glm <- glm(counts ~ cX + cY,
  family = poisson(link = "log"),
  offset = log(time), data = rongelap
)
summary(fit_rongelap_glm)
```

::: {.callout-note}
当 `family = poisson(link = "log")` 时，响应变量只能放正整数。辐射强度与位置有关，影响放射粒子数目 `counts`  的除了辐射强度还有时间，参数 `offset` 是与放射粒子数目相对应的时间间隔。
:::

从这个简单的广义线性模型结果，不难看出，位置变量 `cX` 和 `cY` 是显著的，从实际场景出发，也不难理解，位置信息是非常关键的。进一步，充分利用位置信息，精细建模是很有必要的。相邻位置的核污染浓度是相关的，离得近的比离得远的更相关。简单的广义线性模型并没有考虑距离相关性，它认为各个观测点的数据是相互独立的。因此，考虑采用广义线性混合效应模型，在广义线性模型的基础上添加位置相关的随机效应，用以刻画未能直接观测到的潜在影响。简单起见，假定随机效应之间是相互独立的高斯分布。

$$
\begin{aligned}
\log(\lambda_{j}) &= \beta_{0j} \\
\beta_{0j} &=\gamma_{00} + U_{0j}
\end{aligned}
$$

其中响应变量服从泊松分布，即 $Y_{j} \sim \mathrm{Poisson}(t_{j}\lambda_{j})$ ，$\lambda_{j}$ 表示辐射强度，$t_{j}$ 表示时间，随机效应 $\beta_{0j}$ 服从均值为 0，方差为 $\tau_{00}^2$ 的高斯分布，即 $U_{0j} \sim \mathcal{N}(0,\tau_{00}^2)$ 。截距项（常数项） $\gamma_{00}$ 可以理解为背景辐射，为简单起见，假定为常数。如果全岛观察到有系统性的背景辐射变化，可以考虑用随机变量来建模背景辐射。157 个检测站点的残差服从独立同分布的高斯分布，即 $\epsilon_{j} \sim \mathcal{N}(0,\sigma^2)$，$j=1,2,\cdots,157$ 。


::: {.callout-tip}
根据目前已有的数据，没有收集影响辐射强度的其它因素，模型中也就没有加其它观测变量，所以，只有截距项是变化的。如果有其他因素，可以在 $\beta_{0j}$ 后加入，比如 $\beta_{1j}x_{j}$。进一步，如果在 157 个位置处反复测量多次放射数据，则模型又可变为重复测量模型。

$$
\begin{aligned}
\log(\lambda_{ij}) &= \beta_{0j} +\beta_{1j}x_{1ij} \\
\beta_{0j} &=\gamma_{00} + U_{0j} \\
\beta_{1j} &=\gamma_{10} + U_{1j} \\
\begin{bmatrix}
    U_{0j} \\
    U_{1j}
\end{bmatrix}
&\sim \mathcal{N}
\left(
\begin{bmatrix}
    0  \\
    0 
\end{bmatrix}
,
\begin{bmatrix}
    \tau_{00}^2 & \tau_{01} \\
    \tau_{01} & \tau_{10}^2
\end{bmatrix}
\right)\\
Y_{ij} &\sim \mathrm{Poisson}(t_{ij}\lambda_{ij})
\end{aligned}
$$

其中下标 $i$ 代表重复测量，则 $Y_{ij}$ 表示第 $i$ 次在第 $j$ 个位置检测到的辐射量，$x_{1ij}$ 表示第1个协变量第$i$次在第$j$个位置上的观测值，一种非常贴合实际的情形是 $x_{1ij}$ 就代表时间 $T_{ij}$ ，表示科学家每隔 5 年登岛收集数据，此后登岛多次，$T_{ij}$ 意味着第 $i$ 次登岛收集各个检测点的辐射数据。变截距 $\beta_{0j}$ 和变系数 $\beta_{1j}$ 同时存在，且二者联合分布为二元正态分布，残差仍然假定独立同高斯分布 $\epsilon_{ij} \sim \mathcal{N}(0,\sigma^2)$ 。
:::

**lme4** 包[@Bates2015]是拟合广义线性混合效应模型的金标准，模型拟合函数 `glmer()` 的使用非常类似 Base R 提供的函数 `glm()`。

```{r}
library(Matrix)
library(lme4)
rongelap$dummary <- 1:157
fit_rongelap_glmer <- glmer(counts ~ 1 + (1 | dummary),
  family = poisson(link = "log"),
  offset = log(time), data = rongelap
)
summary(fit_rongelap_glmer)
```

从拟合模型的结果来看，参数 $\gamma_{00} = 1.94405, \tau_{00}^2 = 0.2223$ 。将每个位置看作单独的一个随机效应，比较两个模型的对数似然，后者变大了，这意味着模型拟合效果更好了。

```{r}
# 广义线性模型
logLik(fit_rongelap_glm)
# 广义线性混合效应模型
logLik(fit_rongelap_glmer)
```

::: {.callout-note}
对于混合效应模型，使用 Stan 框架来拟合，需要根据数据指定合适的先验分布，否则马尔可夫链不太容易收敛，迭代效率低，结果不太可靠。

```{r}
#| eval: false
#| echo: true

library(cmdstanr)
set_cmdstan_path(path = "/opt/cmdstan/cmdstan-2.31.0")
# 如何设置先验分布
fit_rongelap_brm <- brms::brm(
  counts ~ 1 + (1 | dummary) + offset(log(time)),
  data = rongelap,
  family = poisson(link = "log"),
  # silent = 2, # 关闭消息
  refresh = 0, # 不显示迭代进度
  seed = 20232023,
  backend = "cmdstanr" # 选择后端 rstan 或 cmdstanr
)
summary(fit_rongelap_brm)
# 发散很多
plot(fit_rongelap_brm)
WAIC(fit_rongelap_brm)
pp_check(fit_rongelap_brm)
```
:::

进一步，去掉随机效应相互独立的假设，随机效应之间存在相关性结构，这更符合位置效应存在相互影响的实际情况，也因此要引入带空间随机效应的广义线性混合效应模型。空间广义线性混合效应模型在统计中具有重要的地位，在地质统计、卫生统计、气象统计和空间计量等领域有广泛的应用，如分析地区范围内的疟疾分布，有限气象站点条件下，预测地区 PM2.5 污染物浓度分布等。

1998 年 Peter J. Diggle 等提出蒙特卡罗极大似然方法估计不带块金效应的响应变量服从泊松分布的空间广义混合效应模型的参数，分析了朗格拉普岛上核污染浓度的空间分布[@Diggle1998]。2004 年 Ole F Christensen 在 Peter J. Diggle 等人的基础上添加了块金效应，同样使用蒙特卡罗极大似然方法估计了模型中的参数[@Christensen2004]。由于现有算法表现受真实数据影响比较大，随后，2006 年 Ole F Christensen 等又提出更加稳健的 Langevin-Metropolis 算法，辅以重参数化技术提升算法性能，可以在马尔可夫链混合和收敛方面独立于数据，并在朗格拉普岛核污染数据中做了实验，体现出预期效果[@Christensen2006]。2015 年 Wagner Hugo Bonat 等在朗格拉普岛核污染数据和蚕豆根腐病数据中比较了 MCMC 算法，MCEM 算法和修正的拉普拉斯近似算法，发现拉普拉斯近似可以提供类似的结果，基于剖面似然可以获得模型参数的置信区间，相比于模拟算法，不需要算法调参和收敛分析 [@Wagner2015]。2016 年 Erlis Ruli 等提出改进的拉普拉斯近似算法，用于边际似然函数，处理高维随机效应的积分，比较了现有的一些基于似然函数的推断方法，体现出渐进误差更小，在朗格拉普岛核污染浓度预测中更加精确[@Erlis2016]。

$$
\begin{aligned}
\log\{\lambda(d_i)\} & =  \beta + S(d_{i}) \\
\log\{\lambda(d_i)\} & =  \beta + S(d_{i}) + Z_{i} \\
Y_{i} &\sim \mathrm{Poisson}(t(d_{i})\lambda(d_i))
\end{aligned}
$$ {#eq-rongelap-poisson-sglmmm}

根据 ${}^{137}\mathrm{Cs}$ 放出的伽马射线在 $N=157$ 站点不同时间间隔 $t(d_{i})$ 的辐射量，建立泊松广义线性混合效应模型。模型中，截距 $\beta$ 相当于平均水平，放射粒子数$Y_{i}$作为响应变量服从均值为 $t(d_{i})\lambda(d_i)$ 的泊松分布，$\lambda(d_i)$ 可理解为辐射强度，$S(d_{i})$ 表示位置 $d_i$ 处的空间效应，随机过程 $S(d)$ 的自协方差函数为幂二次指数型，如下：

$$
\mathrm{Cov}( S(d_i), S(d_j) ) = \sigma^2 \exp( -\|d_i -d_j\|_{2} / \phi )
$$

$S(d),d \in \mathbb{R}^2$ 是平稳空间高斯过程，且 $Z_i$ 之间相互独立同正态分布 $\mathcal{N}(0,\tau^2)$ ，$Z_i$ 表示与空间效应无关的块金效应，即非空间的随机效应，可以理解为测量误差、空间变差或背景辐射，这里 $i = 1,\ldots, 157$。

[**glmmTMB**](https://github.com/glmmTMB/glmmTMB) 包 [@Brooks2017] 基于 [TMB](https://github.com/kaskr/adcomp)[@TMB2016]框架可以拟合空间广义线性混合效应模型，使用语法和前面介绍的 **lme4** 包一样。**glmmTMB** 包还可以拟合线性和广义线性混合效应模型及其扩展，包括零过多（零膨胀）zero-inflation 模型，估计方法是极大似然，实现工具是 TMB。随机效应假定是高斯分布，拉普拉斯方法近似随机效应的高维积分，自动微分的方式计算对数似然函数的梯度。

```{r}
#| message: false
#| warning: false
# 位置标准化
rongelap$loc <- glmmTMB::numFactor(scale(rongelap$cX), scale(rongelap$cY))
# 位置 ID
rongelap$ID <- factor(rep(1, nrow(rongelap)))
# 拟合模型
fit_rongelap_glmmtmb <- glmmTMB::glmmTMB(
  formula = counts ~ 1 + mat(loc + 0 | ID),
  data = rongelap, family = poisson(link = "log"),
  offset = log(time)
)
```

其中协方差结构由核函数决定，这里采用广泛使用的 Matérn 型，**glmmTMB** 包还支持指数型`exp` 和高斯型 `gau`，协方差矩阵是 $157 \times 157$ 维的。对数似然函数的值又变大了，拟合效果更好了，相比于从广义线性模型到广义线性混合效应模型，提升不是特别多，一般来说，模型越复杂提升空间也会越小，过于复杂也没有必要。

```{r}
# 空间广义线性混合效应模型
logLik(fit_rongelap_glmmtmb)
```

`summary(fit_rongelap_glmmtmb)` 输出中包含大型的协方差矩阵，协方差矩阵也可单独抽取见 `ranef(fit_rongelap_glmmtmb)`，篇幅所限，此处略去。输出结果中，模型的固定效应 `fixef(fit_rongelap_glmmtmb)` （此处也是截距）为 1.82007，随机效应的方差为 0.2929。

**spaMM** 包[@Rousset2014]与 **glmmTMB** 包在功能上有很多类似的地方，它也可以拟合空间广义线性混合效应模型，支持非常丰富的统计建模功能，从简单线性模型到相对复杂的空间广义线性混合效应模型，拟合函数 `fitme()` 提供统一的使用语法，输出一个 **spaMM** 包内建的 HLfit 类型的数据对象。

```{r}
#| message: false
library(spaMM)
fit_rongelap_spamm <- fitme(counts ~ 1 + Matern(1 | cX + cY) + offset(log(time)),
  family = poisson(link = "log"), data = rongelap
)
summary(fit_rongelap_spamm)
```

从输出结果来看，与 **glmmTMB** 很接近，模型固定效应的截距项 1.824，随机效应的方差为 0.2973，对数似然函数值为 -1317.551，拟合效果的提升几乎可以忽略。

::: {.callout-tip}
2002 年张首次提出蒙特卡洛极大似然算法给出空间广义线性混合效应模型的估计与预测[@Zhang2002]，因混合模型的多样性，参数计算的复杂性，后续学者们分别从贝叶斯和频率方法的视角提出精确和近似的算法。近似算法的想法是找了一个近似函数替换其中的部分或者全部，使得随着迭代次数增加的情况下，估计的参数值可以趋于真值。精确算法的想法是通过模拟计算的方式硬积一个高维积分，不断增加采样的次数逼近目标函数，比如基于 MCMC 及其改进型 HMC 和 NUTS 硬积参数的联合后验分布中的高维积分做参数的全贝叶斯推断。贝叶斯方法主流的有拉普拉斯近似和全贝叶斯推断，频率方法主流的有基于似然的拉普拉斯近似和自适应高斯-埃尔米特算法。值得一提，**INLA** 包[@Rue2009;@Lindgren2015]、**glmmfields** 包[@glmmfields2018]和 **sdmTMB** 包[@Anderson2022]也可以用来拟合模型 @eq-rongelap-poisson-sglmmm 。

- **INLA** 包采用 SPDE 方法将目标区域划分成三角网格，以拉普拉斯集成嵌套计算方法逼近参数的后验分布[@Virgilio2018]。预测精度和速度主要由网格的细密程度决定，对于大规模空间数据集，比如数以千计的采样点，可以将网格划分得稀疏一些，总是可以计算。内部采用了并行迭代和英特尔 MKL 矩阵优化工具库。
- **glmmfields** 包以多元 t 分布替代多元高斯分布表示高斯马尔可夫随机场拟合带极端事件的时空模型，所以它不局限于本文涉及的空间模型。**glmmfields** 包内建的空间和时空模型是基于 Stan 的，因此，采用全贝叶斯精确推断方式，一般以 NUTS 采样的方式获取参数后验分布，主要算法是汉密尔顿蒙特卡洛 HMC， 对自动微分变分推断方式有试验性支持。
- **sdmTMB** 包与 **glmmTMB** 包源自一脉，内部的计算框架都来自 TMB，相比而言，支持的模型更多，特别是生态学领域的空间和时空模型。
- **hglm** 包对于具有分层结构的混合效应模型，提出 H-Likelihood 方法 拟合分层广义线性模型、自回归空间模型 [@Ronnegard2010;@Alam2015]。
:::

### 模型预测 {#sec-rongelap-predict}

接下来，预测给定的边界（海岸线）内的任意位置的核污染浓度，展示全岛的污染图景。先从点构造多边形数据，再将多边形做网格划分，继而将网格中心点作为模型输入获得辐射强度的预测值。

海岸线上取一些点，点的数量越多，对海岸线的刻画越精确，这在转弯处体现得非常明显。海岸线的数据是以成对的坐标构成，导入 R 语言中，是以数据框的形式存储，为了方便后续的操作，引入空间数据操作的 **sf** 包[@Pebesma2018]。将海岸线数据转化为空间点数据 POINT。

```{r}
library(sf)
rongelap_sf <- st_as_sf(rongelap, coords = c("cX", "cY"), dim = "XY")
rongelap_coastline_sf <- st_as_sf(rongelap_coastline, coords = c("cX", "cY"), dim = "XY")
```

**sf** 包提供了大量空间数据操作函数，比如用 `st_bbox()` 获得东西南北的边界点，下面还会陆续涉及其它空间数据操作。

```{r}
st_bbox(rongelap_coastline_sf)
```

连接点 POINT 构造多边形 POLYGON 对象。POINT 和 POLYGON 是 **sf** 包内建的基础的几何类型，其它复杂的空间类型是由它们衍生而来。

```{r}
rongelap_coastline_sfp <- st_cast(st_combine(st_geometry(rongelap_coastline_sf)), "POLYGON")
```

@fig-point-to-polygon 上下两个子图分别展示点和线。上图是原始的采样点数据，下图是以点带线，串联 POINT 构造 POLYGON 后的多边形。

```{r}
#| label: fig-point-to-polygon
#| fig-cap: "海岸线"
#| fig-subcap:
#| - 点数据
#| - 多边形数据
#| layout-ncol: 1
#| fig-width: 5
#| fig-height: 3
#| fig-showtext: true
#| echo: false

library(ggplot2)
ggplot(rongelap_coastline_sf) +
  geom_sf(size = 0.5) +
  theme_void()

ggplot(rongelap_coastline_sfp) +
  geom_sf(fill = "white", linewidth = 0.5) +
  theme_void()
```

为了确保覆盖整个岛，还需要一点缓冲空间，就是说在给定的边界线外围再画一个多边形，这可以用函数 `st_buffer()` 根据海岸线构造缓冲区，一个 POLYGON 类型的几何数据对象，缓冲距离选择 50 米。

```{r}
rongelap_coastline_buffer <- st_buffer(rongelap_coastline_sfp, dist = 50)
```

下 @fig-rongelap-buffer 将采样点、海岸线和缓冲区都展示出来了。

```{r}
#| label: fig-rongelap-buffer
#| fig-cap: "朗格拉普岛海岸线及其缓冲区"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true
#| echo: false

ggplot() +
  geom_sf(data = rongelap_sf, size = 0.5) +
  geom_sf(data = rongelap_coastline_sfp, fill = NA, color = "gray30") +
  geom_sf(data = rongelap_coastline_buffer, fill = NA, color = "black") +
  theme_void()
```

接下来，利用函数 `st_make_grid()` 根据海岸缓冲线打网格，朗格拉普岛是狭长的，因此，网格是 $75\times 150$ 的，意味着水平方向 75 行，垂直方向 150 列，细密程度是可以调整的，越密岛内的格点越多，核污染浓度计算越精确，同时也越耗时。

```{r}
rongelap_coastline_grid <- st_make_grid(rongelap_coastline_buffer, n = c(150, 75))
```

区域网格化后的效果如 @fig-rongelap-grid 所示。

```{r}
#| label: fig-rongelap-coastline-grid
#| fig-cap: "朗格拉普岛网格化"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true
#| echo: false

ggplot() +
  geom_sf(data = rongelap_coastline_grid, fill = NA, color = "gray") +
  geom_sf(data = rongelap_coastline_sfp, fill = NA, color = "gray30") +
  geom_sf(data = rongelap_coastline_buffer, fill = NA, color = "black") +
  theme_void()
```

**sf** 包的函数 `st_intersects()` 可以将小网格落在缓冲区以内的筛选出来，再用函数 `st_centroid()` 计算余下小网格的中心点。

```{r}
rongelap_coastline_grid <- st_as_sf(rongelap_coastline_grid)
rongelap_coastline_buffer <- st_as_sf(rongelap_coastline_buffer)
rongelap_grid <- rongelap_coastline_grid[rongelap_coastline_buffer, op = st_intersects]
rongelap_grid_centroid <- st_centroid(rongelap_grid)
```

网格的中心点将作为新的采样点，要在这些新的采样点上预测核污染浓度。全岛网格化后，将朗格拉普岛海岸线、网格、网格中心点都展示出来，如 @fig-rongelap-grid 所示。

```{r}
#| label: fig-rongelap-grid
#| fig-cap: "网格化采样点的分布"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true
#| echo: false

ggplot() +
  geom_sf(data = rongelap_coastline_sfp, 
          fill = NA, color = "gray30", linewidth = 0.5) +
  geom_sf(data = rongelap_grid, fill = NA, color = "gray30") +
  geom_sf(data = rongelap_grid_centroid, size = 0.1) +
  theme_void()
```

抽取网格中心点的坐标并转化为数据框类型，以便输入模型中，新数据的列名需要和训练数据保持一致，最后补充漂移项。

```{r}
rongelap_grid_df <- as.data.frame(st_coordinates(rongelap_grid_centroid))
colnames(rongelap_grid_df) <- c("cX", "cY")
rongelap_grid_df$time <- 300
```

将数据输入 **spaMM** 包拟合的模型，并将模型返回的结果整理成数据框，再与采样点数据合并。`predict()` 是一个泛型函数，**spaMM** 包为模型对象提供了相应的预测方法。

```{r}
rongelap_grid_pred <- predict(fit_rongelap_spamm,
  newdata = rongelap_grid_df, type = "response"
)
rongelap_grid_df$pred <- as.vector(rongelap_grid_pred)
```

将预测结果以散点图的形式呈现到图上，考虑到核污染在全岛的分布应当是连续性的，接下来要绘制热力图。

```{r}
#| label: fig-rongelap-pred-point
#| fig-cap: "网格中心点的核污染浓度预测值"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true

rongelap_grid_sf <- st_as_sf(rongelap_grid_df, coords = c("cX", "cY"), dim = "XY")
library(colorspace)
ggplot() +
  geom_sf(data = rongelap_grid_sf, aes(color = pred / time), 
          show.legend = FALSE, size = 0.5) +
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.5
  ) +
  scale_color_continuous_sequential(palette = "Grays") +
  theme_void()
```

为了绘制热力图，利用 **stars** 包[@stars2022]将预测数据按原网格化的精度转化成栅格对象，裁减超出朗格拉普岛海岸线以外的内容。

```{r}
library(abind)
library(stars)
rongelap_grid_stars <- st_rasterize(rongelap_grid_sf, nx = 150, ny = 75)
rongelap_stars <- st_crop(x = rongelap_grid_stars, y = rongelap_coastline_sfp)
```

除了矢量栅格化函数 `st_rasterize()` 和栅格剪裁函数 `st_crop()` ，**stars** 包还提供栅格数据图层 `geom_stars()`，这可以和 **ggplot2** 内置的图层搭配使用，下 @fig-rongelap-pred-stars 是 **ggplot2** 包绘制的辐射强度的热力分布图。图左侧一小一大两个虚线框是放大前后的部分区域，展示朗格拉普岛核辐射强度的局部变化。

```{r}
#| label: fig-rongelap-pred-stars
#| fig-cap: "朗格拉普岛核污染分布"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true
#| echo: true

# 虚线框数据
dash_sfp <- st_polygon(x = list(rbind(
  c(-6000, -3600),
  c(-6000, -2600),
  c(-5000, -2600),
  c(-5000, -3600),
  c(-6000, -3600)
)), dim = "XY")

p3 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred / time)
  ) +
  # 海岸线
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.5
  ) +
  # 图例
  scale_fill_continuous_sequential(
    palette = "Grays", 
    guide = guide_colourbar(
      barwidth = 15, barheight = 1,
      nbin = 10, label.position = "top",
      title.position = "right" 
    )
  ) +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  # 箭头
  geom_segment(
    data = data.frame(x = -5500, xend = -5000, y = -2600, yend = -2000),
    aes(x = x, y = y, xend = xend, yend = yend),
    arrow = arrow(length = unit(0.03, "npc"))
  ) +
  theme_void() +
  labs(fill = "辐射强度") +
  theme(legend.position = "top")

p4 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred / time), show.legend = FALSE
  ) +
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.75
  ) +
  scale_fill_continuous_sequential(palette = "Grays") +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  theme_void() +
  coord_sf(expand = FALSE, xlim = c(-6000, -5000), ylim = c(-3600, -2600))
# 叠加图形
p3
print(p4, vp = grid::viewport(x = .25, y = .625, width = .45, height = .45))
```

美国当年是在比基尼环礁做的氢弹核试验，试验地与朗格拉普岛相距 100 多英里，核辐射羽流受大气、海洋环流等影响，漂流到朗格拉普岛，受当地水文、地理环境影响，核污染在全岛的分布是不均匀的，颜色越深表示核污染越严重。


## 疟疾流行度的分析 {#sec-gambia-children-malaria}

本节任务是基于 **geoR** 包内置的 gambia 数据集，通过分析 5 岁以下儿童在非洲冈比亚 65 个村庄的疟疾感染情况，建模预测疟疾流行度。

::: {.callout-note}
[Paulo J. Ribeiro Jr](http://www.leg.ufpr.br/~paulojus/) 和 [Peter J. Diggle](https://www.lancaster.ac.uk/staff/diggle/) 将 Gambia 数据集内置在 **geoR** 包内，[Barry Rowlingson](https://barry.rowlingson.com/research.html) 也分析过 Gambia 数据集 [@Thomson1999;@Diggle2002]。2019 年 Paula Moraga 在书《Geospatial Health Data: Modeling and Visualization with R-INLA and Shiny》中[第八章](https://www.paulamoraga.com/book-geospatial/sec-geostatisticaldataexamplespatial.html) 借助 **INLA** 包分析 Gambia 数据集。
:::


### 数据说明 {#sec-gambia-data}

除了谷歌提供的地图服务，对纬度范围在南纬 60 至北纬 60 度的地区，[SRTM](https://srtm.csi.cgiar.org/)（Shuttle Radar Topography Mission，简称 SRTM）提供 90 米精度的海拔数据。首先借助 **geodata** 包下载冈比亚的海拔和二级行政边界数据。[**geodata** 包](https://github.com/rspatial/geodata) 获取的冈比亚海拔数据，返回 **terra** 类型的数据对象：SpatRaster 对象。获取冈比亚的二级级行政区数据，它是一个多边形边界地图数据，也返回 **terra** 类型的数据对象：SpatVector 对象。

```{r}
# Gambia 海拔数据
gmb_alt <- geodata::elevation_30s(country = "GMB", mask = TRUE, path = "data/")
# Gambia 市级行政边界数据
gmb_map <- geodata::gadm(country = "GMB", level = 2, path = "data/")
# Gambia 儿童疟疾感染数据
data(gambia, package = "geoR")
```

gambia 数据集记录了冈比亚地区 65 个村庄 5 岁以下儿童是否感染疟疾的情况，一共收集了 2035 个样本，见下 @tbl-gambia-data 。横、纵坐标记录村庄的位置，是否感染是响应变量，年龄以天计，是否有蚊帐以及是否对蚊帐杀虫是非常重要的变量，植被覆盖度与蚊虫有关系，是否有医院对疟疾的治疗很关键。

```{r}
#| label: tbl-gambia-data
#| tbl-cap: "各村庄儿童是否感染疟疾的统计数据（部分）"
#| echo: false

knitr::kable(head(gambia), row.names = F,
  col.names = c(
    "横坐标", "纵坐标", "是否感染", "年龄",
    "是否有蚊帐", "是否杀虫",
    "植被覆盖度", "是否有医院"
  )
)
```

接着，统计各个村庄的儿童感染率。

```{r}
# 按各个村庄分组统计儿童的感染率
gambia_agg <- aggregate(
  x = cbind(pos, netuse, treated) ~ x + y + green + phc,
  data = gambia, FUN = function(x) sum(x) / length(x)
)
```

数据集 gambia 中变量 `x` 和 `y` 分别为调查的村庄的横、纵坐标，参考系是 UTM。将 UTM 坐标系转化为 WGS 84 坐标系，以便将疟疾观测数据和冈比亚地形数据绘制在一幅图上。

```{r}
library(sf)
# 转化为 sf 对象
gambia_agg <- st_as_sf(gambia_agg, coords = c("x", "y"))
st_crs(gambia_agg) <- st_crs(sp::CRS("+proj=utm +zone=28"))
# 转化坐标系
gambia_agg <- st_transform(gambia_agg, crs = 4326)
```

[**tidyterra** 包](https://github.com/dieghernan/tidyterra) 基于 [**terra** 包](https://github.com/rspatial/terra) 提供一些专门用于栅格数据可视化的图层，扩展了 **ggplot2** 包的功能。

```{r}
#| label: fig-observed-prevalence
#| fig-cap: "各村庄的 5 岁以下儿童感染疟疾的比例"
#| fig-width: 8
#| fig-height: 3.5
#| fig-showtext: true

ggplot() +
  tidyterra::geom_spatraster(data = gmb_alt) +
  tidyterra::scale_fill_terrain_c(direction = -1) +
  tidyterra::geom_spatvector(
    data = gmb_map, fill = NA, colour = "gray40"
  ) +
  geom_sf(data = gambia_agg, aes(color = pos)) +
  scale_color_viridis_c(option = "plasma", direction = -1, labels = scales::percent) +
  theme_minimal() +
  labs(x = "经度", y = "纬度", fill = "海拔", color = "感染率")
```

很多非洲国家基础设施建设落后，医疗卫生条件比较差，越靠近河流的地方，水草越多，蚊虫也越多，疟疾容易通过蚊虫叮咬感染和传播。如 @fig-observed-prevalence 所示，冈比亚国家整体上，海拔比较低，沿着冈比亚河，各个村庄分布在南、北岸。图中的点为村庄位置，点的颜色越深表示感染比例越高。根据冈比亚狭长的地形和横穿东西全境的冈比亚河，可将其看作东、中和西三个部分，东部是河流上游，西部是河流下游，村庄分为 5 个区域，西部两个，南岸和北岸各一个，中游一个在南岸，东部两个，也是南岸和北岸各有一个。


### 数据模型 {#sec-gambia-model}

- 个体水平下的建模

$$
Y_{ij} \sim \mathrm{Bernoulli}(1,p_{ij})
$$ 

$Y_{ij}$ 表示第 $i$ 个村庄的第 $j$ 个儿童是否感染疟疾的响应变量，对应每个人检验结果，感染记为 1，没有感染记为 0。$p_{ij}$ 表示第 $i$ 个村庄的第 $j$ 个儿童的感染率。其中，$i = 1,2,\cdots, 65$ 。 每个儿童感染可能性与很多因素相关，既有环境因素，也有个体因素。

- 村庄水平下的建模

$$
Y_{i} \sim \mathrm{Binomial}(N_i,p_{i})
$$ 

$Y_{i}$ 表示第 $i$ 个村庄感染疟疾的儿童数量，是响应变量，对应整个村子的情况。$N_i$ 表示第 $i$ 个村庄的样本量，$p_{i}$ 表示第 $i$ 个村庄的感染率，其中，$i = 1,2,\cdots, 65$ 。

@Diggle2002 建立如下空间广义线性混合效应模型。

$$
\begin{aligned}
\log\{p_{ij}/(1-p_{ij})\} &= \alpha + \boldsymbol{\beta}^{\top}z_{ij} + S(x_i) \\
\log\{p_{ij}/(1-p_{ij})\} &= \alpha + \boldsymbol{\beta}^{\top}z_{ij} + S(x_i) + U_{i}
\end{aligned}
$$

$\alpha$ 是截距，回归系数向量 $\boldsymbol{\beta}^{\top} = (\beta_1,\beta_2,\beta_3,\beta_4,\beta_5,\beta_6,\beta_7,\beta_8,\beta_9)$ 各个参数的含义如下表。

参数           | 实际意义
:------------- | :-------------
$\alpha$     | 截距项
$\beta_1$    | 儿童年龄(age)，以天计
$\beta_2$    | 蚊帐没有消毒(untreated)
$\beta_3$    | 蚊帐消毒(treated)
$\beta_4$    | 村庄周围绿植覆盖度(greenness)
$\beta_5$    | 村庄是否有医疗中心(PHC)
$\beta_6$    | 村庄在2号区域(1号区域作为参考)
$\beta_7$    | 村庄在3号区域
$\beta_8$    | 村庄在4号区域
$\beta_9$    | 村庄在5号区域
 
$S(x)$ 是平稳空间高斯过程，自协方差函数 $\mathsf{Cov}(S(x_i),S(x_j)) = \sigma^2\rho(u), u = \|x_i -x_j \|_2$，自相关函数 $\rho(u) = \{2^{\kappa -1}\Gamma(\kappa)\}^{-1}(u/\phi)^{\kappa}\mathcal{K}_{\kappa}(u/\phi),u > 0$ 为 Matérn 型，$Y_{ij} \sim \mathrm{Bernoulli}(p_{ij})$ ，其中 $Y_{ij}$ 表示在第 $i$ 个村庄的第 $j$ 个儿童血液中是否含有疟原虫，有就取 1，没有就取0， $p_{ij}$ 是伯努利分布的成功概率，实际含义是儿童携带疟原虫的可能性。

@Diggle2002 使用贝叶斯 MCMC 算法计算模型参数后验估计值，并主要依赖 **geoRglm** 包实现，计算结果见下表。模型参数的贝叶斯估计，估计的 95\% 的置信区间端点分别来自后验 2.5\% 和97.5\% 分位点，第3列和第4列分别是后验均值和中位数。

| 参数                  |   2.5%分位点   |   97.5%分位点  |   均值 (mean)  |  中位数 (median)  |
| :-------------------- | :-------------: | :-------------: | :------------: | :---------------: |
| $\alpha$              |    -2.966473    |     2.624348    |   -0.131214    |   -0.077961       |
| $\beta_1$(age)        |     0.000455    |     0.000933    |    0.000689    |    0.000685       |
| $\beta_2$(untreated)  |    -0.673143    |    -0.042011    |   -0.357825    |   -0.359426       |
| $\beta_3$(treated)    |    -0.753803    |     0.088418    |   -0.32954     |   -0.325853       |
| $\beta_4$(greenness)  |    -0.085675    |     0.047924    |   -0.020068    |   -0.020834       |
| $\beta_5$(PHC)        |    -0.787913    |     0.129883    |   -0.344846    |   -0.349915       |
| $\beta_6$(area 2)     |    -1.14419     |     0.51023     |   -0.324665    |   -0.331634       |
| $\beta_7$(area 3)     |    -1.40862     |     0.558616    |   -0.5321      |   -0.559229       |
| $\beta_8$(area 4)     |    -0.109472    |     2.425342    |    1.049441    |    1.016969       |
| $\beta_9$(area 5)     |     0.164828    |     2.606357    |    1.309553    |    1.325129       |
| $\sigma^2$            |     0.311756    |     1.050227    |    0.585592    |    0.553477       |
| $\phi$                |     0.915789    |     10.20069    |    2.522294    |    1.422975       |
| $\kappa$              |     0.079522    |     2.784646    |    1.084108    |    0.937436       |

作为对比，在上述模型的基础上添加块金效应 $U_{i}$，其中 $U_{i} \sim \mathcal{N}(0,\nu^2)$，其它符号含义不变。再用 Stan 实现贝叶斯 MCMC 算法估计模型中的各个参数值，计算结果见下表。观察到块金效应占比 $\nu^2 = \tau^2/\sigma^2 = 0.000002$，是一个很小的值，在实际应用中应该可以忽略。 与模型一不同的是模型二的回归系数向量 $\boldsymbol{\beta}$ 不包含 $\beta_6,\ldots,\beta_9$ 四个回归系数，这是因为 geoR 包内的 gambia 数据集缺失与区域有关的标记信息，因此不能复现 @Diggle2002 的结果，但是这里考虑了块金效应。模型参数的贝叶斯估计值和 95\% 的置信区间，第1至4列依次是后验2.5\%、97.5\%分位点、后验均值以及后验中位数。

| 参数                  |   2.5%分位点   |   97.5%分位点  |   均值 (mean)  |  中位数 (median)  |
| :-------------------- | :-------------: | :-------------: | :------------: | :---------------: |
| $\alpha$              |    -4.232073    |     1.114734    |   -1.664353    |   -1.696228       |
| $\beta_1$(age)        |     0.000442    |     0.000918    |    0.000677    |    0.000676       |
| $\beta_2$(untreated)  |    -0.684407    |    -0.083811    |   -0.383750    |   -0.385772       |
| $\beta_3$(treated)    |    -0.778149    |     0.054543    |   -0.355655    |   -0.355632       |
| $\beta_4$(greenness)  |    -0.039706    |     0.071505    |   -0.018833    |    0.020079       |
| $\beta_5$(PHC)        |    -0.791741    |     0.180737    |   -0.324738    |   -0.322760       |
| $\nu^2$               |     0.000002    |     0.515847    |    0.117876    |    0.018630       |
| $\sigma^2$            |     0.240826    |     1.662284    |    0.793031    |    0.740790       |
| $\phi$                |     1.242164    |     53.351207   |   11.653717    |    7.032258       |
| $\kappa$              |     0.150735    |     1.955524    |    0.935064    |    0.830548       |

由于年龄在模型中以天计，所以会发现回归系数 $\beta_1$ 在两个模型中都很小。

